class Solution {
    
    static ListNode reverselist(ListNode node) 
    { 
        ListNode prev = null, curr = node, next; 
        while (curr != null) { 
            next = curr.next; 
            curr.next = prev; 
            prev = curr; 
            curr = next; 
        } 
        node = prev; 
        return node; 
    } 
    public void reorderList(ListNode head) {
        if(head!=null)
        {
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null)
        {
             fast=fast.next.next;
            slow=slow.next;
        }
        ListNode node=head;
        ListNode node1=slow.next;
        slow.next=null;
        
        node1=reverselist(node1);
        head=new ListNode(0);
        ListNode curr=head;
        
        while(node!=null || node1!=null)
        {
              if(node!=null)
              {
                  curr.next=node;
                  curr=curr.next;
                  node=node.next;
              }
            
              if(node1!=null)
              {
                   curr.next=node1;
                  curr=curr.next;
                  node1=node1.next;
                  
              }
        }
        head=head.next;
        }
    }
}